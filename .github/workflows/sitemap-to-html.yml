name: Generate HTML Sitemap

on:
  # Run whenever sitemap.xml is updated
  push:
    paths:
      - 'sitemap.xml'
  # Manual trigger from the Actions tab
  workflow_dispatch:
  # Run on schedule (once per day)
  schedule:
    - cron: '0 0 * * *'  # Runs at midnight every day

jobs:
  generate-html-sitemap:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      
      # Download the sitemap.xml file if it doesn't exist in the repository
      - name: Download sitemap.xml
        run: |
          if [ ! -f "sitemap.xml" ]; then
            echo "Downloading sitemap.xml from GitHub repository"
            curl -s -o sitemap.xml https://raw.githubusercontent.com/Eb43/eb43.github.io/refs/heads/main/sitemap.xml
          else
            echo "Using existing sitemap.xml from repository"
          fi
      
      - name: Create sitemap_dynamic.html
        run: |
          # Create a sitemap HTML file from the XML
          cat > sitemap_dynamic.html << 'EOL'
          <!DOCTYPE html>
          <html lang="en">
          <head>
              <meta charset="UTF-8">
              <meta name="viewport" content="width=device-width, initial-scale=1.0">
              <title>Sitemap for eb43.github.io</title>
              <style>
                  body {
                      font-family: Arial, sans-serif;
                      line-height: 1.6;
                      max-width: 1200px;
                      margin: 0 auto;
                      padding: 20px;
                      color: #333;
                  }
                  h1 {
                      text-align: center;
                      margin-bottom: 20px;
                      padding-bottom: 15px;
                      border-bottom: 1px solid #eee;
                  }
                  .url-item {
                      margin-bottom: 15px;
                      padding: 12px;
                      border-bottom: 1px solid #eee;
                  }
                  .url-link {
                      font-weight: bold;
                      font-size: 16px;
                      color: #3498db;
                      text-decoration: none;
                  }
                  .url-link:hover {
                      text-decoration: underline;
                  }
                  .meta-info {
                      font-size: 14px;
                      color: #7f8c8d;
                      margin-top: 5px;
                  }
                  .stats {
                      background-color: #f8f9fa;
                      padding: 15px;
                      border-radius: 5px;
                      margin: 20px 0;
                  }
              </style>
          </head>
          <body>
              <h1>Sitemap for eb43.github.io</h1>
              <div class="stats" id="stats"></div>
              <div id="sitemap-container">Loading...</div>
              
              <script>
                  document.addEventListener('DOMContentLoaded', function() {
                      // We're on the same domain, so CORS isn't an issue
                      fetch('sitemap.xml')
                          .then(response => response.text())
                          .then(data => {
                              const parser = new DOMParser();
                              const xmlDoc = parser.parseFromString(data, 'text/xml');
                              
                              // Get all URLs
                              const urls = xmlDoc.getElementsByTagName('url');
                              const container = document.getElementById('sitemap-container');
                              
                              // Update stats
                              document.getElementById('stats').innerHTML = `
                                  <h2>Sitemap Statistics</h2>
                                  <p>Total URLs: <strong>${urls.length}</strong></p>
                                  <p>Last generated: <strong>${new Date().toLocaleString()}</strong></p>
                              `;
                              
                              // Clear container
                              container.innerHTML = '';
                              
                              // Process each URL
                              for (let i = 0; i < urls.length; i++) {
                                  const urlElement = urls[i];
                                  const loc = urlElement.getElementsByTagName('loc')[0]?.textContent;
                                  const lastmod = urlElement.getElementsByTagName('lastmod')[0]?.textContent;
                                  const changefreq = urlElement.getElementsByTagName('changefreq')[0]?.textContent;
                                  const priority = urlElement.getElementsByTagName('priority')[0]?.textContent;
                                  
                                  if (loc) {
                                      const urlItem = document.createElement('div');
                                      urlItem.className = 'url-item';
                                      
                                      // URL link
                                      const urlLink = document.createElement('a');
                                      urlLink.href = loc;
                                      urlLink.textContent = loc;
                                      urlLink.className = 'url-link';
                                      urlLink.target = '_blank';
                                      urlItem.appendChild(urlLink);
                                      
                                      // Meta information
                                      const metaInfo = document.createElement('div');
                                      metaInfo.className = 'meta-info';
                                      
                                      if (lastmod) {
                                          metaInfo.innerHTML += `<div>Last Modified: ${new Date(lastmod).toLocaleString()}</div>`;
                                      }
                                      
                                      if (changefreq) {
                                          metaInfo.innerHTML += `<div>Change Frequency: ${changefreq}</div>`;
                                      }
                                      
                                      if (priority) {
                                          metaInfo.innerHTML += `<div>Priority: ${priority}</div>`;
                                      }
                                      
                                      urlItem.appendChild(metaInfo);
                                      container.appendChild(urlItem);
                                  }
                              }
                          })
                          .catch(error => {
                              document.getElementById('sitemap-container').innerHTML = `
                                  <div style="color: red; padding: 15px; border: 1px solid red;">
                                      Error loading sitemap: ${error.message}
                                  </div>
                              `;
                          });
                  });
              </script>
          </body>
          </html>
          EOL
      
      - name: Generate Static HTML Sitemap
        run: |
          # Install required packages
          pip install lxml requests

          # Create a Python script to transform the XML to static HTML
          cat > convert_sitemap.py << 'EOL'
          import xml.etree.ElementTree as ET
          import datetime
          import os
          from lxml import etree

          try:
              # Check if the sitemap.xml exists
              if not os.path.exists('sitemap.xml'):
                  raise FileNotFoundError("sitemap.xml not found")
          
              # Try to load the sitemap with lxml for better namespace support
              parser = etree.XMLParser(recover=True)
              tree = etree.parse('sitemap.xml', parser)
              root = tree.getroot()
              
              # Extract namespace if it exists
              ns = ''
              if root.tag.startswith('{'):
                  ns = root.tag.split('}')[0] + '}'
              
              # Find all URL nodes
              urls = []
              for url in root.findall('.//' + ns + 'url'):
                  url_data = {}
                  loc_elem = url.find('.//' + ns + 'loc')
                  if loc_elem is not None and loc_elem.text:
                      url_data['loc'] = loc_elem.text
                      
                      # Get optional elements
                      lastmod_elem = url.find('.//' + ns + 'lastmod')
                      if lastmod_elem is not None and lastmod_elem.text:
                          url_data['lastmod'] = lastmod_elem.text
                      
                      changefreq_elem = url.find('.//' + ns + 'changefreq')
                      if changefreq_elem is not None and changefreq_elem.text:
                          url_data['changefreq'] = changefreq_elem.text
                      
                      priority_elem = url.find('.//' + ns + 'priority')
                      if priority_elem is not None and priority_elem.text:
                          url_data['priority'] = priority_elem.text
                      
                      urls.append(url_data)
              
              # Create a static HTML file (no JavaScript needed)
              with open('sitemap.html', 'w') as f:
                  f.write('''<!DOCTYPE html>
          <html lang="en">
          <head>
              <meta charset="UTF-8">
              <meta name="viewport" content="width=device-width, initial-scale=1.0">
              <title>Sitemap for eb43.github.io (Static Version)</title>
              <style>
                  body {
                      font-family: Arial, sans-serif;
                      line-height: 1.6;
                      max-width: 1200px;
                      margin: 0 auto;
                      padding: 20px;
                      color: #333;
                  }
                  h1 {
                      text-align: center;
                      margin-bottom: 20px;
                      padding-bottom: 15px;
                      border-bottom: 1px solid #eee;
                  }
                  .url-item {
                      margin-bottom: 15px;
                      padding: 12px;
                      border-bottom: 1px solid #eee;
                  }
                  .url-link {
                      font-weight: bold;
                      font-size: 16px;
                      color: #3498db;
                      text-decoration: none;
                  }
                  .url-link:hover {
                      text-decoration: underline;
                  }
                  .meta-info {
                      font-size: 14px;
                      color: #7f8c8d;
                      margin-top: 5px;
                  }
                  .stats {
                      background-color: #f8f9fa;
                      padding: 15px;
                      border-radius: 5px;
                      margin: 20px 0;
                  }
              </style>
          </head>
          <body>
              <h1>Sitemap for eb43.github.io</h1>
              
              <div class="stats">
                  <h2>Sitemap Statistics</h2>
                  <p>Total URLs: <strong>''' + str(len(urls)) + '''</strong></p>
                  <p>Last generated: <strong>''' + datetime.datetime.now().strftime('%Y-%m-%d %H:%M:%S') + '''</strong></p>
              </div>
              
              <div id="sitemap-container">
          ''')
                  
                  for url in urls:
                      f.write('<div class="url-item">\n')
                      f.write(f'    <a href="{url["loc"]}" class="url-link" target="_blank">{url["loc"]}</a>\n')
                      f.write('    <div class="meta-info">\n')
                      
                      if 'lastmod' in url:
                          f.write(f'        <div>Last Modified: {url["lastmod"]}</div>\n')
                      
                      if 'changefreq' in url:
                          f.write(f'        <div>Change Frequency: {url["changefreq"]}</div>\n')
                      
                      if 'priority' in url:
                          f.write(f'        <div>Priority: {url["priority"]}</div>\n')
                      
                      f.write('    </div>\n')
                      f.write('</div>\n')
                  
                  f.write('''
              </div>
          </body>
          </html>''')
          
              print(f"Successfully created sitemap.html with {len(urls)} URLs")
              
          except Exception as e:
              print(f"Error processing sitemap: {str(e)}")
              # Create an error HTML file
              with open('sitemap.html', 'w') as f:
                  f.write(f'''<!DOCTYPE html>
          <html lang="en">
          <head>
              <meta charset="UTF-8">
              <meta name="viewport" content="width=device-width, initial-scale=1.0">
              <title>Sitemap Error</title>
              <style>
                  body {{ font-family: Arial, sans-serif; padding: 20px; }}
                  .error {{ color: red; padding: 15px; border: 1px solid red; }}
              </style>
          </head>
          <body>
              <h1>Sitemap Processing Error</h1>
              <div class="error">
                  Error processing sitemap: {str(e)}
              </div>
              <div>
                  <p>Debug information:</p>
                  <pre>File exists: {os.path.exists('sitemap.xml')}</pre>
                  <pre>Current directory: {os.getcwd()}</pre>
                  <pre>Directory contents: {os.listdir('.')}</pre>
              </div>
          </body>
          </html>''')
          EOL
          
          # Run the Python script
          python convert_sitemap.py
          
          # Debug information
          echo "Current directory: $(pwd)"
          echo "Files in current directory:"
          ls -la
      
      - name: Commit and push if there are changes
        run: |
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --local user.name "GitHub Action"
          git add sitemap_dynamic.html sitemap.html
          git diff --quiet && git diff --staged --quiet || (git commit -m "Auto-update sitemap HTML" && git push)